{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFechGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFechGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,cAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAYA,OAEI,sBAAMC,SAVU,SAACC,GACjBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCHlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,0DAC2CC,UAAUH,GADrD,sDAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAoB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAElC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECLuB,SAACA,GAExB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAd,GACFY,EAAS,CACLf,KAAKG,EACLU,SAAQ,SAIjB,CAACpB,IACGqB,EDbgBI,CAAYzB,GAA5BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAEb,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAGR,qBAAKA,UAAU,YAAf,SAEQT,EAAKE,KAAK,SAACC,GAAD,OACN,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEf9Be,EAAe,WAExB,MAAoCxC,mBAAS,CAAC,gBAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAIA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEQ0C,EAAWlB,KAAI,SAAAT,GAAQ,OAEnB,aADD,CACE,EAAD,CAEAA,SAAUA,GADLA,Y,MCd7B4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.27634bb1.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport Proptypes from 'prop-types';\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setInputValue] = useState('Hola Mundo');\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n    const handleSubmit= (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats=>[inputValue,...cats]);\n            setInputValue('');\n        }\n        \n    }\n    return (\n        \n        <form onSubmit= {handleSubmit}>\n            <input\n                type=\"text\"\n                value = {inputValue}\n                onChange = {handleInputChange }\n            />\n        </form>\n    )\n}\nAddCategory.propTypes = {\n    setCategories: Proptypes.func.isRequired\n}","\n\nexport const getGifs = async( category ) => {\n    const url =`https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(category)}&api_key=yttbbHJoGF0HnO09K1uH0geXtjlYUOcU`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id,title,url} ) => {\n    //console.log(img);\n    return (\n        <div className=\"card animate__animated animate__bounce\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFechGifs } from '../hooks/useFechGifs';\n//import { getGifs } from '../helpers/getGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data, loading} =useFechGifs(category);\n    \n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n            \n            {\n                <div className=\"card-grid\">\n                    {\n                        data.map( (img) => (\n                            <GifGridItem\n                                key = {img.id} \n                                {...img}\n                            />\n                        ))  \n                    }\n                </div>\n            }\n        </>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport { getGifs } from '../helpers/getGifs';\nexport const useFechGifs = (category) => {\n    \n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n   // eSte codigo Solo quiero que se ejecuta cuando el componente es renderizado por primera vez\n    //se aÃ±ade al corchet  del final la categoria por si cambia que lo vuelva a renderizar\n    useEffect(() => {\n        getGifs(category)\n        .then(img => {    \n            setstate({\n                data:img,\n                loading:false\n            \n            })\n        })\n    }, [category]);\n    return state;\n\n}\n","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['Dragon Ball']);\n    //const handleAdd = () => {\n    //    setCategories([...categories,'HunterXHunter']);\n    //}\n    return (\n        <>\n            <h2>GifExpertapp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr />\n            <ol>\n                {\n                    categories.map(category => \n                       //<li key={category}>{category}</li>\n                        <GifGrid \n                        key={category}\n                        category={category} \n                        />\n                    )\n                }\n                \n            </ol>\n        </>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}